package {	import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.TextField;	import com.greensock.TweenLite;	[SWF(backgroundColor="0xeeeeee", width="980", height="700", frameRate="30")]		//TODO 	put some of the functions in the onResize and onEnterFrame functions	//		in seperate functions and call these functions in the above mentioned	//		also add a funtion to make input via keyboard possible (alter the string e.g.)			public class Main extends Sprite	{		private var _obj : Rect;		private var hDiv : Sprite;		private var vDiv : Sprite;				private var _xp : Number;		private var _yp : Number;				private var tf : TextField;				private var font : FontClass_12340dacf373d680;		private var single : Single;				private var keyboad : Keyboard;		private var inputField : Single;		private var typed : String = "";				private var pic : BitmapLoader;				private var bg2 : Key;				//private var lineColor : Number = 0xaaaa00;		private var _lineColor : Number = 0xcccccc;				public function Main()		{			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;						stage.addEventListener( Event.RESIZE, onResize );			stage.addEventListener( Event.ENTER_FRAME, onEnterFrame );						//stage.dispatchEvent(new Event( Event.RESIZE ));				start();			createDivs();			fonting();			createKeyboard();		}				private function createDivs() : void		{			hDiv = new Sprite();			vDiv = new Sprite();						hDiv.graphics.lineStyle( 1, _lineColor );			hDiv.graphics.moveTo( stage.stageWidth/2, 0 );			hDiv.graphics.lineTo( _xp, _yp );				addChild( hDiv );						single = new Single(true, 0xeeeeee );			single.x = single.y = 30;			addChild(single);						inputField = new Single(true, 0x666666 ); 			inputField.setText( "a" );			inputField.x = stage.stageWidth/2 - inputField.width/2;			inputField.y = stage.stageHeight/2 - inputField.height/2-5;													pic = new BitmapLoader( "../images/suchmaske.png" );			pic.x = stage.stageWidth/2 - pic.width/2;			pic.y = stage.stageHeight/2 - pic.height/2+5;			addChild( pic );						addChild( inputField );			}						private function drawDivs() : void		{			removeChild(hDiv);						hDiv = new Sprite();						hDiv.graphics.lineStyle( 1, _lineColor );			hDiv.graphics.moveTo( stage.stageWidth/2, 0 );			hDiv.graphics.lineTo( stage.stageWidth/2, stage.stageHeight );							addChild( hDiv );		}					private function start():void		{			trace("starting application");					//btn.addEventListener( MouseEvent.CLICK, onClicked );						_obj = new Rect( 							stage.stageWidth/2, 							15, 							150, 							30 							);										//see if everything is centered			//addChild( _obj );						//not a key, but the textfield's background			var bg : Key= new Key( 0, 29, 100, 30);			addChild( bg );						bg2 = new Key( 0, 13, 300, 30);			//addChild( bg2 );		}				//TODO put all stuff that has to be updated in a function and call that function within onResize and onEnterFrame		private function onResize( e:Event ):void		{			_obj.setX( stage.stageWidth/2 );			_obj.setWidth( stage.stageWidth/980 );			//trace(_obj.getX());			//centered?			//drawDivs();			//tf.text = "din " + String( _obj.getWidth() );			//single.setText( String( _obj.getWidth() ));			//single.setText( keyboad.getString() );			single.setText(stage.frameRate.toString());						inputField.x = stage.stageWidth/2 - inputField.getTextFieldWidth()/2;			inputField.y = stage.stageHeight/2;						bg2.x = stage.stageWidth/2-150;			bg2.y = stage.stageHeight/2-20-10;						//TODO find out why aasigning a position does not work when creating the keyboard					keyboad.x = stage.stageWidth/2 - keyboad.width/2;			keyboad.y = stage.stageHeight/5*3;						pic.x = stage.stageWidth/2 - pic.width/2;			pic.y = stage.stageHeight/2 - pic.height/2+15;		}				private function onEnterFrame( e:Event ):void		{			_obj.setX( stage.stageWidth/2 );			_obj.setWidth( stage.stageWidth/980 );			//centered?			//drawDivs();			//tf.text = "din " + String( _obj.getWidth() );			//display width			//single.setText( String( _obj.getWidth() ));			//display input text			//single.setText( keyboad.getString() );			//display frame rate			single.setText(stage.frameRate.toString());			inputField.setText( keyboad.getString() );			inputField.x = stage.stageWidth/2 - inputField.getTextFieldWidth()/2;			inputField.y = stage.stageHeight/2-10;						bg2.x = stage.stageWidth/2-150;			bg2.y = stage.stageHeight/2-20;						//TODO find out why aasigning a position does not work when creating the keyboard			keyboad.x = stage.stageWidth/2 - keyboad.width/2;			keyboad.y = stage.stageHeight/5*3;						pic.x = stage.stageWidth/2 - pic.width/2			pic.y = stage.stageHeight/2 - pic.height/2+15;		}				private function onClicked( e:MouseEvent ) : void		{			_obj.scaleX = 1.2;			_obj.scaleY = 1.2;			_obj.setX(stage.stageWidth/2);			_obj.setY(stage.stageHeight/2);		}				private function fonting() : void		{					}						private function createKeyboard() : void		{			keyboad = new Keyboard();			//keyboad.x = stage.stageWidth/2;			//keyboad.y = stage.stageHeight + keyboad.height+100;						keyboad.alpha = 0;						//keyboad.x = stage.stageWidth/2 - keyboad.width/2;			//keyboad.y = stage.stageHeight/4*3;			keyboad.mouseChildren = true;			keyboad.name = "keyboard";			addChild( keyboad );			TweenLite.to( keyboad, 3, { alpha : 1 } );			trace( "kx: " + keyboad.x );			trace( "ky: " + keyboad.y );					}	}}